buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

ext.propFile = file "build.properties"

propFile.withReader {
	
	def prop = new Properties()
	prop.load(it)
	project.ext.props = new ConfigSlurper().parse prop
}

version = props.ac_version
group= "com.shinoow.abyssalcraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "AbyssalCraft"

sourceCompatibility = 1.7
targetCompatibility = 1.7

minecraft {
    version = "1.7.2-10.12.2.1147"
    runDir = "eclipse/assets"
	
		replaceIn "AbyssalCraft.java"
            replace "forgeversion", props.forge_version
}

dependencies {

}

version = "${props.mc_version}-${props.ac_version}"

processResources
{
	// I really don't want that file to exist anywhere
	exclude '**/Thumbs.db'

	// this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
	
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
		include 'version.properties'

        // replace version and mcversion
        expand ([
			'version':project.version,
			'acversion':project.props.ac_version,
			'mcversion':project.props.mc_version,
			'forgeversion':project.props.forge_version
		])
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
		exclude 'version.properties'
    }
}
	
	task srcJar(type: Jar) {
    from sourceSets.main.allSource
	
	extension = 'jar'
	classifier = 'src'
}

	task devJar(type: Jar, dependsOn: 'classes') {
    from(sourceSets.main.output) {
        include '**'
    }

    extension = 'jar'
    classifier = 'dev'
}
	artifacts {
    archives srcJar, devJar
}
